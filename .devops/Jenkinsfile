pipeline {
    environment {
      DOCKER_REPOSITORY_URI = '339021997421.dkr.ecr.us-east-1.amazonaws.com/themusk/dev/userandcountry'
      registryCredentialId = 'ecr:us-east-1:ecr:us-east-1'
  }

  agent any
    tools {
      maven 'maven3'
    }
    stages {      

        stage('Cloning Git Repo') {
            steps {

                  git branch: 'master',
                  credentialsId: 'rohit-cred',
                  url: 'https://github.com/rohit-95/devops_userinfo_springboot.git'
            }
        }

        stage('Build maven ') {
            steps { 
                    sh 'pwd'      
                    sh 'mvn  clean install -DskipTests'
            }
        }

        stage('Build & push Docker image') {
            steps {
                script {
                   withDockerRegistry(credentialsId: 'ecr:us-east-1:ecr:us-east-1', url: 'https://339021997421.dkr.ecr.us-east-1.amazonaws.com') {
                        def version_value = sh script: 'mvn help:evaluate -Dexpression=project.version -q -DforceStdout', returnStdout: true
                        sh "echo Project in version value: $version_value"
                        def VERSION = version_value
                        sh "echo VERSION=$VERSION > version.ini"
                        sh '''
                          source version.ini
                          GIT_COMMIT_ID="$(echo $(git rev-parse HEAD) | cut -c 1-7)"
                          TIMESTAMP=$(date +'%Y%m%d.%H%M')
                          export TAG_NAME=v-$VERSION-$TIMESTAMP-$GIT_COMMIT_ID
                          export TAG=v-$VERSION
                          IMG_NAME="$DOCKER_REPOSITORY_URI:$TAG_NAME"
                          IMAGE="$DOCKER_REPOSITORY_URI:$TAG"
                          docker build -t "$IMG_NAME" .
                          docker tag $IMG_NAME $IMAGE
                          docker push "$IMG_NAME"
                          docker push "$IMAGE"
                          echo "TAG_NAME=$TAG_NAME" > tagname.ini
                          docker rmi -f $IMG_NAME
                          docker rmi -f $IMAGE
                        '''

                    }
                }
            }
        }
    }
}
